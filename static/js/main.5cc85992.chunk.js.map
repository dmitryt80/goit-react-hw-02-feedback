{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/Feedback/Feedback.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","title","children","className","s","container","Feedback","options","addVoice","map","el","type","button","onClick","Statistics","total","positivePercentage","list","Object","keys","item","numbers","Notification","message","text","App","state","good","neutral","bad","onSetVoice","setState","prevState","countTotalFeedback","reduce","countPositiveFeedbackPercentage","Math","round","this","positive","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,QAAU,4BAA4B,OAAS,6B,kBCA3QD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,oBCAnED,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,6B,sMCgBVC,MAdf,YAA8C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC/B,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACGJ,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,M,gBCsBQI,MA1Bf,YAA0C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC3B,OACE,mCACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SACLR,UAAWC,IAAEQ,OACbC,QAAS,WACPL,EAASE,IAJb,SAQGA,GAFIA,W,gBCgBFI,MA3Bf,YAA6D,IAAvCP,EAAsC,EAAtCA,QAASQ,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACpC,OACE,mCACE,qBAAIb,UAAWC,IAAEa,KAAjB,UACGC,OAAOC,KAAKZ,GAASE,KAAI,SAACC,GAAD,OACxB,qBAAIP,UAAWC,IAAEgB,KAAjB,UACGV,EADH,KACQ,sBAAMP,UAAS,UAAKC,IAAEiB,QAAP,YAAkBjB,IAAEM,IAAnC,SAA2CH,EAAQG,WAG7D,qBAAIP,UAAS,UAAKC,IAAEgB,KAAP,KAAb,oBACS,sBAAMjB,UAAS,UAAKC,IAAEiB,QAAP,KAAf,SAAmCN,OAE5C,qBAAIZ,UAAWC,IAAEgB,KAAjB,+BACqB,IACnB,uBAAMjB,UAAS,UAAKC,IAAEiB,QAAP,KAAf,UAAmCL,EAAnC,gB,iBCNKM,MARf,YAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACtC,OAAO,mCAAGA,GAAW,mBAAGpB,UAAWC,IAAEoB,KAAhB,SAAuBD,OCIxCE,E,4MACJC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCC,WAAa,SAACnB,GACZ,EAAKoB,UAAS,SAACC,GAAD,sBAAmBrB,EAAOqB,EAAUrB,GAAQ,O,EAG5DsB,mBAAqB,WAEnB,OADef,OAAOC,KAAK,EAAKO,OAClBQ,QAAO,SAACnB,EAAOL,GAAR,OAAgBK,EAAS,EAAKW,MAAMhB,KAAM,I,EAGjEyB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKX,MAAMC,KAAO,EAAKM,qBAAwB,M,4CAGpE,WACE,IAAMlB,EAAQuB,KAAKL,qBACbM,EAAWD,KAAKH,kCAChBT,EAAQY,KAAKZ,MACbP,EAAOD,OAAOC,KAAKmB,KAAKZ,OAC9B,OACE,sBAAKvB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWF,MAAM,wBAAjB,SACE,cAAC,EAAD,CAAUM,QAASY,EAAMX,SAAU8B,KAAKR,eAE1C,cAAC,EAAD,CAAW7B,MAAM,aAAjB,SACGc,EAAQ,EACP,cAAC,EAAD,CACER,QAASmB,EACTX,MAAOA,EACPC,mBAAoBuB,IAGtB,cAAC,EAAD,CAAchB,QAAQ,kC,GAlChBiB,aA0CHf,IC5CfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5cc85992.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2ubce\",\"item\":\"Statistics_item__2TvL-\",\"numbers\":\"Statistics_numbers__1ap49\",\"good\":\"Statistics_good__2DEqV\",\"neutral\":\"Statistics_neutral__JWWui\",\"bad\":\"Statistics_bad___EY8F\",\"visible\":\"Statistics_visible__2xLkQ\",\"hidden\":\"Statistics_hidden__rkxXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__tlw6m\",\"title\":\"Container_title__3JlGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__XT1OD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__lWRiR\"};","import PropTypes from 'prop-types'\r\nimport s from './Container.module.css'\r\n\r\nfunction Container({ title = '', children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Container","import PropTypes from 'prop-types'\r\nimport s from './Feedback.module.css'\r\n\r\nfunction Feedback({ options, addVoice }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        {options.map((el) => (\r\n          <button\r\n            type=\"button\"\r\n            className={s.button}\r\n            onClick={() => {\r\n              addVoice(el)\r\n            }}\r\n            key={el}\r\n          >\r\n            {el}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  addVoice: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Feedback","import PropTypes from 'prop-types'\r\nimport s from './Statistics.module.css'\r\n\r\nfunction Statistics({ options, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {Object.keys(options).map((el) => (\r\n          <li className={s.item}>\r\n            {el}: <span className={`${s.numbers} ${s[el]}`}>{options[el]}</span>\r\n          </li>\r\n        ))}\r\n        <li className={`${s.item} `}>\r\n          Total: <span className={`${s.numbers} `}>{total}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          Positive feedback:{' '}\r\n          <span className={`${s.numbers} `}>{positivePercentage}%</span>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics","import PropTypes from 'prop-types'\r\nimport s from './Notification.module.css'\r\n\r\nfunction Notification({ message = '' }) {\r\n  return <>{message && <p className={s.text}>{message}</p>}</>\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n}\r\n\r\nexport default Notification","import React, { Component } from 'react'\nimport './App.css'\nimport Container from './components/Container/Container'\n\nimport Feedback from './components/Feedback/Feedback'\nimport Statistics from './components/Statistics/Statistics'\nimport Notification from './components/Notification/Notification'\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 }\n\n  onSetVoice = (type) => {\n    this.setState((prevState) => ({ [type]: prevState[type] + 1 }))\n  }\n\n  countTotalFeedback = () => {\n    const objKey = Object.keys(this.state)\n    return objKey.reduce((total, el) => (total += this.state[el]), 0)\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100)\n  }\n\n  render() {\n    const total = this.countTotalFeedback()\n    const positive = this.countPositiveFeedbackPercentage()\n    const state = this.state\n    const keys = Object.keys(this.state)\n    return (\n      <div className=\"App\">\n        <Container title=\"Please leave feedback\">\n          <Feedback options={keys} addVoice={this.onSetVoice} />\n        </Container>\n        <Container title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              options={state}\n              total={total}\n              positivePercentage={positive}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'modern-normalize'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)"],"sourceRoot":""}